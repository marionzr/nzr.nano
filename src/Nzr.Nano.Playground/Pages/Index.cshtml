@page
@model Nzr.Nano.Playground.Pages.IndexModel

<!--
    This code is a quick prototype for a developer tool.
    It does not reflect my personal coding style.
-->

<!DOCTYPE html>
<html>
<head>
    <link rel="icon" href="/nzr.ico" type="image/x-icon">
    <title>Nano Playground</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container mt-5" style="transform: scale(0.75); transform-origin: top center;">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <img src="/nzr.png" alt="Nano Playground Logo" class="img-fluid" style="max-width: 50px; height: auto;">
            <h1 class="ms-2">Nano Playground</h1>
        </div>

        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-4">
                <h3>Generate New Charset</h3>
                <button class="btn btn-primary" id="generateCharsetButton">Generate Charsets</button>

                <form method="post">
                    <div class="form-group">
                        <label for="charsetOutput"></label>
                        <textarea id="charsetOutput" class="form-control" rows="30" placeholder="Charsets" disabled></textarea>
                    </div>
                    <button type="button" class="btn btn-success mt-3" id="applyCharsetButton" disabled>Apply</button>
                </form>
            </div>

            <div class="col-md-4">
                <h3>Obfuscate</h3>
                <form method="post">
                    <div class="form-group">
                        <label for="obfuscateKey">Key:</label>
                        <input type="text" id="obfuscateKey" class="form-control" placeholder="Enter key" disabled>
                    </div>
                    <div class="form-group mt-3">
                        <label for="obfuscateNumber">Number:</label>
                        <input type="number" id="obfuscateNumber" class="form-control" placeholder="Enter number" disabled>
                    </div>
                    <div class="form-group mt-3">
                        <label for="obfuscateMinLength">Min Length:</label>
                        <input type="number" id="obfuscateMinLength" class="form-control" value="6" disabled>
                    </div>
                    <button type="button" class="btn btn-success mt-3" id="obfuscateButton" disabled>Obfuscate</button>
                </form>
                <h4 class="mt-3" style="font-size: 1.5rem; font-weight: bold;">Obfuscated Number:</h4>
                <div class="d-flex align-items-center">
                    <div id="obfuscatedResult" class="d-inline-block" style="font-size: 1.25rem;"></div>
                    <button class="btn btn-outline-secondary btn-sm ms-2" id="copyObfuscatedButton" style="display:none;">ðŸ“‘</button>
                </div>
            </div>

            <div class="col-md-4">
                <h3>Deobfuscate</h3>
                <form method="post">
                    <div class="form-group">
                        <label for="deobfuscateKey">Key:</label>
                        <input type="text" id="deobfuscateKey" class="form-control" placeholder="Enter key" disabled>
                    </div>
                    <div class="form-group mt-3">
                        <label for="deobfuscateValue">Obfuscated Value:</label>
                        <div class="input-group">
                            <button class="btn btn-outline-secondary" id="pasteButton" type="button">ðŸ“‹</button>
                            <input type="text" id="deobfuscateValue" class="form-control" placeholder="Enter obfuscated string" disabled style="font-size: 1rem;">
                        </div>
                    </div>
                    <button class="btn btn-warning mt-3" id="deobfuscateButton" disabled>Deobfuscate</button>
                </form>
                <h4 class="mt-3">Original Number:</h4>
                <div style="font-size: 1.25rem;" id="deobfuscatedResult"></div>
            </div>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            function disableFields() {
                $('#charsetOutput').prop('disabled', true);
                $('#applyCharsetButton').prop('disabled', true);
                $('#obfuscateKey').prop('disabled', true);
                $('#obfuscateNumber').prop('disabled', true);
                $('#obfuscateMinLength').prop('disabled', true);
                $('#obfuscateButton').prop('disabled', true);
                $('#deobfuscateKey').prop('disabled', true);
                $('#deobfuscateValue').prop('disabled', true);
                $('#deobfuscateButton').prop('disabled', true);
            }

            $('#generateCharsetButton').click(function () {
                $.get('?handler=Generate', function (data) {
                    $('#charsetOutput').val(JSON.stringify(data, null, 2));
                    $('#applyCharsetButton').prop('disabled', false);
                    $('#charsetOutput').prop('disabled', false);
                    $('#obfuscateKey').prop('disabled', false);
                    $('#obfuscateNumber').prop('disabled', false);
                    $('#obfuscateMinLength').prop('disabled', false);
                    $('#obfuscateButton').prop('disabled', false);
                    $('#deobfuscateKey').prop('disabled', false);
                    $('#deobfuscateValue').prop('disabled', false);
                    $('#deobfuscateButton').prop('disabled', false);
                }).fail(function () {
                    alert("Error generating charset. Check the console for details.");
                });
            });

            $('#applyCharsetButton').click(function () {
                var charsetValue = $('#charsetOutput').val();

                $.ajax({
                    url: '@Url.Page("Index", "NanoOptions")',
                    type: 'POST',
                    data: {
                        nanoOptionsJson: charsetValue,
                        "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        console.log("Options applied:", response);
                        alert("Charset applied successfully.");
                    },
                    error: function () {
                        alert("Error applying charset. Check the console for details.");
                    }
                });
            });

            function validateObfuscateButton() {
                var key = $('#obfuscateKey').val().trim();
                var number = $('#obfuscateNumber').val().trim();
                if (key && number) {
                    $('#obfuscateButton').prop('disabled', false);
                } else {
                    $('#obfuscateButton').prop('disabled', true);
                }
            }

            function validateDeobfuscateButton() {
                var key = $('#deobfuscateKey').val().trim();
                var value = $('#deobfuscateValue').val().trim();
                if (key && value) {
                    $('#deobfuscateButton').prop('disabled', false);
                } else {
                    $('#deobfuscateButton').prop('disabled', true);
                }
            }

            $('#obfuscateButton').click(function () {
                event.preventDefault();
                $.ajax({
                    url: '?handler=Obfuscate',
                    type: 'POST',
                    data: {
                        key: $('#obfuscateKey').val(),
                        number: $('#obfuscateNumber').val(),
                        minLength: $('#obfuscateMinLength').val(),
                        "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        $('#obfuscatedResult').text(response.obfuscated);
                        $('#copyObfuscatedButton').show();
                    },
                    error: function () {
                        alert("An error occurred while obfuscating the number.");
                    }
                });
            });

            $('#deobfuscateButton').click(function () {
                event.preventDefault();
                $.ajax({
                    url: '?handler=Deobfuscate',
                    type: 'POST',
                    data: {
                        key: $('#deobfuscateKey').val(),
                        obfuscatedValue: $('#deobfuscateValue').val(),
                        "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.error) {
                            alert(response.error);
                        } else {
                            $('#deobfuscatedResult').text(response.originalNumber);
                        }
                    },
                    error: function () {
                        alert("An error occurred while deobfuscating the value.");
                    }
                });
            });

            $('#obfuscateKey').on('input', function () {
                var keyValue = $(this).val();
                $('#deobfuscateKey').val(keyValue);
                validateObfuscateButton();
            });

            $('#obfuscateNumber').on('input', validateObfuscateButton);
            $('#deobfuscateKey').on('input', validateDeobfuscateButton);
            $('#deobfuscateValue').on('input', validateDeobfuscateButton);

            $('#copyObfuscatedButton').click(function () {
                var textToCopy = $('#obfuscatedResult').text();
                navigator.clipboard.writeText(textToCopy).then(function () {
                    console.log("Obfuscated number copied to clipboard!");
                }).catch(function () {
                    alert("Failed to copy to clipboard.");
                });
            });

            $('#pasteButton').click(function () {
                navigator.clipboard.readText().then(function (clipboardText) {
                    $('#deobfuscateValue').val(clipboardText);
                }).catch(function () {
                    alert("Failed to read clipboard content.");
                });
            });
        });
    </script>

</body>
</html>
